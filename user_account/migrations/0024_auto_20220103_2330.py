# Generated by Django 3.2.7 on 2022-01-03 16:30

from django.db import migrations
from django.db.models import Q
from utils.enums import TestResult

def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    CustomUser = apps.get_model("user_account", "CustomUser")
    Test = apps.get_model("form", "Test")
    db_alias = schema_editor.connection.alias
    users = CustomUser.objects.using(db_alias).all()
    tests = Test.objects.using(db_alias).all()

    for user in users:
        last_test_has_result = tests.filter(user=user).filter(~Q(result=TestResult.NONE)).order_by('-created_at')
        if len(list(last_test_has_result)) > 0:
            last_test_has_result = last_test_has_result[0]
            if hasattr(user, 'member_x_custom_user') and user.member_x_custom_user:
                member = user.member_x_custom_user
                member.last_tested_had_result = last_test_has_result.created_at
                member.save()
            if hasattr(user, 'manager_x_custom_user') and user.manager_x_custom_user:
                manager = user.manager_x_custom_user
                manager.last_tested_had_result = last_test_has_result.created_at
                manager.save()
            if hasattr(user, 'staff_x_custom_user') and user.staff_x_custom_user:
                staff = user.staff_x_custom_user
                staff.last_tested_had_result = last_test_has_result.created_at
                staff.save()

def reverse_func(apps, schema_editor):
    ...

class Migration(migrations.Migration):

    dependencies = [
        ('user_account', '0023_auto_20220103_2325'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
